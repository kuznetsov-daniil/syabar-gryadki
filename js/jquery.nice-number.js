!function(t){function e(t,e,n){"mousedown"==t?(e.timeout=setTimeout(function(){e.actualInterval=setInterval(function(){n()},100)},200),n()):(e.timeout&&clearTimeout(e.timeout),e.actualInterval&&clearInterval(e.actualInterval))}t.fn.niceNumber=function(n){var u=t.extend({autoSize:!0,autoSizeBuffer:1,buttonDecrement:"-",buttonIncrement:"+",buttonPosition:"around"},n);return this.each(function(){var n=this,a=t(n),o=null,i=null;"undefined"!=typeof a.attr("max")&&a.attr("max")!==!1&&(o=parseFloat(a.attr("max"))),"undefined"!=typeof a.attr("min")&&a.attr("min")!==!1&&(i=parseFloat(a.attr("min"))),i&&!n.value&&a.val(i);var r=t("<div/>",{"class":"nice-number"}).insertAfter(n),l={},p=t("<button/>").attr("type","button").html(u.buttonDecrement).on("mousedown mouseup mouseleave",function(t){e(t.type,l,function(){(null==i||i<parseFloat(n.value))&&n.value--}),"mouseup"!=t.type&&"mouseleave"!=t.type||a.trigger("input")}),m=t("<button/>").attr("type","button").html(u.buttonIncrement).on("mousedown mouseup mouseleave",function(t){e(t.type,l,function(){(null==o||o>parseFloat(n.value))&&n.value++}),"mouseup"!=t.type&&"mouseleave"!=t.type||a.trigger("input")});switch(u.buttonPosition){case"left":p.appendTo(r),m.appendTo(r),a.appendTo(r);break;case"right":a.appendTo(r),p.appendTo(r),m.appendTo(r);break;case"around":default:p.appendTo(r),a.appendTo(r),m.appendTo(r)}u.autoSize&&(a.width(a.val().length+u.autoSizeBuffer+"ch"),a.on("keyup input",function(){a.animate({width:a.val().length+u.autoSizeBuffer+"ch"},200)}))})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5uaWNlLW51bWJlci5qcyJdLCJuYW1lcyI6WyIkIiwiY2hhbmdlSW50ZXJ2YWwiLCJldmVudFR5cGUiLCJpbnRlcnZhbCIsImNhbGxiYWNrIiwidGltZW91dCIsInNldFRpbWVvdXQiLCJhY3R1YWxJbnRlcnZhbCIsInNldEludGVydmFsIiwiY2xlYXJUaW1lb3V0IiwiY2xlYXJJbnRlcnZhbCIsImZuIiwibmljZU51bWJlciIsIm9wdGlvbnMiLCJzZXR0aW5ncyIsImV4dGVuZCIsImF1dG9TaXplIiwiYXV0b1NpemVCdWZmZXIiLCJidXR0b25EZWNyZW1lbnQiLCJidXR0b25JbmNyZW1lbnQiLCJidXR0b25Qb3NpdGlvbiIsInRoaXMiLCJlYWNoIiwiY3VycmVudElucHV0IiwiJGN1cnJlbnRJbnB1dCIsImF0dHJNYXgiLCJhdHRyTWluIiwiYXR0ciIsInBhcnNlRmxvYXQiLCJ2YWx1ZSIsInZhbCIsIiRpbnB1dENvbnRhaW5lciIsImNsYXNzIiwiaW5zZXJ0QWZ0ZXIiLCIkbWludXNCdXR0b24iLCJodG1sIiwib24iLCJldmVudCIsInR5cGUiLCJ0cmlnZ2VyIiwiJHBsdXNCdXR0b24iLCJhcHBlbmRUbyIsIndpZHRoIiwibGVuZ3RoIiwiYW5pbWF0ZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkNBQUMsU0FBVUEsR0ErSFQsUUFBU0MsR0FBZUMsRUFBV0MsRUFBVUMsR0FDMUIsYUFBYkYsR0FDRkMsRUFBU0UsUUFBVUMsV0FBVyxXQUM1QkgsRUFBU0ksZUFBaUJDLFlBQVksV0FDcENKLEtBQ0MsTUFDRixLQUNIQSxNQUVJRCxFQUFTRSxTQUNYSSxhQUFhTixFQUFTRSxTQUVwQkYsRUFBU0ksZ0JBQ1hHLGNBQWNQLEVBQVNJLGlCQTNJN0JQLEVBQUVXLEdBQUdDLFdBQWEsU0FBU0MsR0FDekIsR0FBSUMsR0FBV2QsRUFBRWUsUUFDZkMsVUFBVSxFQUNWQyxlQUFnQixFQUNoQkMsZ0JBQWlCLElBQ2pCQyxnQkFBaUIsSUFDakJDLGVBQWdCLFVBQ2ZQLEVBRUgsT0FBT1EsTUFBS0MsS0FBSyxXQUNmLEdBQUlDLEdBQWVGLEtBQ2ZHLEVBQWdCeEIsRUFBRXVCLEdBQ2xCRSxFQUFVLEtBQ1ZDLEVBQVUsSUFJeUIsb0JBQTlCRixHQUFjRyxLQUFLLFFBQ3ZCSCxFQUFjRyxLQUFLLFVBQVcsSUFFakNGLEVBQVVHLFdBQVdKLEVBQWNHLEtBQUssU0FJSCxtQkFBOUJILEdBQWNHLEtBQUssUUFDdkJILEVBQWNHLEtBQUssVUFBVyxJQUVqQ0QsRUFBVUUsV0FBV0osRUFBY0csS0FBSyxTQUt4Q0QsSUFDSUgsRUFBYU0sT0FFakJMLEVBQWNNLElBQUlKLEVBSXBCLElBQUlLLEdBQWtCL0IsRUFBRSxVQUNwQmdDLFFBQU8sZ0JBRVJDLFlBQVlWLEdBR1hwQixLQUdBK0IsRUFBZWxDLEVBQUUsYUFDbEIyQixLQUFLLE9BQVEsVUFDYlEsS0FBS3JCLEVBQVNJLGlCQUNka0IsR0FBRywrQkFBZ0MsU0FBU0MsR0FDM0NwQyxFQUFlb0MsRUFBTUMsS0FBTW5DLEVBQVUsWUFFdEIsTUFBWHVCLEdBQ0dBLEVBQVVFLFdBQVdMLEVBQWFNLFNBRXJDTixFQUFhTSxVQU1ELFdBQWRRLEVBQU1DLE1BQ1csY0FBZEQsRUFBTUMsTUFFVGQsRUFBY2UsUUFBUSxXQUl4QkMsRUFBY3hDLEVBQUUsYUFDakIyQixLQUFLLE9BQVEsVUFDYlEsS0FBS3JCLEVBQVNLLGlCQUNkaUIsR0FBRywrQkFBZ0MsU0FBU0MsR0FDM0NwQyxFQUFlb0MsRUFBTUMsS0FBTW5DLEVBQVUsWUFFdEIsTUFBWHNCLEdBQ0dBLEVBQVVHLFdBQVdMLEVBQWFNLFNBRXJDTixFQUFhTSxVQU1ELFdBQWRRLEVBQU1DLE1BQ1csY0FBZEQsRUFBTUMsTUFFVGQsRUFBY2UsUUFBUSxVQUs1QixRQUFRekIsRUFBU00sZ0JBQ2YsSUFBSyxPQUNIYyxFQUFhTyxTQUFTVixHQUN0QlMsRUFBWUMsU0FBU1YsR0FDckJQLEVBQWNpQixTQUFTVixFQUN2QixNQUNGLEtBQUssUUFDSFAsRUFBY2lCLFNBQVNWLEdBQ3ZCRyxFQUFhTyxTQUFTVixHQUN0QlMsRUFBWUMsU0FBU1YsRUFDckIsTUFDRixLQUFLLFNBQ0wsUUFDRUcsRUFBYU8sU0FBU1YsR0FDdEJQLEVBQWNpQixTQUFTVixHQUN2QlMsRUFBWUMsU0FBU1YsR0FLckJqQixFQUFTRSxXQUNYUSxFQUFja0IsTUFDWmxCLEVBQWNNLE1BQU1hLE9BQU83QixFQUFTRyxlQUFlLE1BRXJETyxFQUFjWSxHQUFHLGNBQWMsV0FDN0JaLEVBQWNvQixTQUNaRixNQUFTbEIsRUFBY00sTUFBTWEsT0FBTzdCLEVBQVNHLGVBQWUsTUFDM0QsWUF1Qlg0QiIsImZpbGUiOiJqcXVlcnkubmljZS1udW1iZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQpIHtcbiAgJC5mbi5uaWNlTnVtYmVyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcbiAgICAgIGF1dG9TaXplOiB0cnVlLFxuICAgICAgYXV0b1NpemVCdWZmZXI6IDEsXG4gICAgICBidXR0b25EZWNyZW1lbnQ6ICctJyxcbiAgICAgIGJ1dHRvbkluY3JlbWVudDogXCIrXCIsXG4gICAgICBidXR0b25Qb3NpdGlvbjogJ2Fyb3VuZCdcbiAgICB9LCBvcHRpb25zKTtcblxuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtcbiAgICAgIHZhciBjdXJyZW50SW5wdXQgPSB0aGlzLFxuICAgICAgICAgICRjdXJyZW50SW5wdXQgPSAkKGN1cnJlbnRJbnB1dCksXG4gICAgICAgICAgYXR0ck1heCA9IG51bGwsXG4gICAgICAgICAgYXR0ck1pbiA9IG51bGw7XG5cbiAgICAgIC8vIEhhbmRsZSBtYXggYW5kIG1pbiB2YWx1ZXNcbiAgICAgIGlmIChcbiAgICAgICAgdHlwZW9mICRjdXJyZW50SW5wdXQuYXR0cignbWF4JykgIT09IHR5cGVvZiB1bmRlZmluZWRcbiAgICAgICAgJiYgJGN1cnJlbnRJbnB1dC5hdHRyKCdtYXgnKSAhPT0gZmFsc2VcbiAgICAgICkge1xuICAgICAgICBhdHRyTWF4ID0gcGFyc2VGbG9hdCgkY3VycmVudElucHV0LmF0dHIoJ21heCcpKTtcbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICB0eXBlb2YgJGN1cnJlbnRJbnB1dC5hdHRyKCdtaW4nKSAhPT0gdHlwZW9mIHVuZGVmaW5lZFxuICAgICAgICAmJiAkY3VycmVudElucHV0LmF0dHIoJ21pbicpICE9PSBmYWxzZVxuICAgICAgKSB7XG4gICAgICAgIGF0dHJNaW4gPSBwYXJzZUZsb2F0KCRjdXJyZW50SW5wdXQuYXR0cignbWluJykpO1xuICAgICAgfVxuXG4gICAgICAvLyBGaXggaXNzdWUgd2l0aCBpbml0aWFsIHZhbHVlIGJlaW5nIDwgbWluXG4gICAgICBpZiAoXG4gICAgICAgIGF0dHJNaW5cbiAgICAgICAgJiYgIWN1cnJlbnRJbnB1dC52YWx1ZVxuICAgICAgKSB7XG4gICAgICAgICRjdXJyZW50SW5wdXQudmFsKGF0dHJNaW4pO1xuICAgICAgfVxuXG4gICAgICAvLyBHZW5lcmF0ZSBjb250YWluZXJcbiAgICAgIHZhciAkaW5wdXRDb250YWluZXIgPSAkKCc8ZGl2Lz4nLHtcbiAgICAgICAgICBjbGFzczogJ25pY2UtbnVtYmVyJ1xuICAgICAgICB9KVxuICAgICAgICAuaW5zZXJ0QWZ0ZXIoY3VycmVudElucHV0KTtcblxuICAgICAgLy8gR2VuZXJhdGUgaW50ZXJ2YWwgKG9iamVjdCBzbyBpdCBpcyBwYXNzZWQgYnkgcmVmZXJlbmNlKVxuICAgICAgdmFyIGludGVydmFsID0ge307XG5cbiAgICAgIC8vIEdlbmVyYXRlIGJ1dHRvbnNcbiAgICAgIHZhciAkbWludXNCdXR0b24gPSAkKCc8YnV0dG9uLz4nKVxuICAgICAgICAuYXR0cigndHlwZScsICdidXR0b24nKVxuICAgICAgICAuaHRtbChzZXR0aW5ncy5idXR0b25EZWNyZW1lbnQpXG4gICAgICAgIC5vbignbW91c2Vkb3duIG1vdXNldXAgbW91c2VsZWF2ZScsIGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgICBjaGFuZ2VJbnRlcnZhbChldmVudC50eXBlLCBpbnRlcnZhbCwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgYXR0ck1pbiA9PSBudWxsXG4gICAgICAgICAgICAgIHx8IGF0dHJNaW4gPCBwYXJzZUZsb2F0KGN1cnJlbnRJbnB1dC52YWx1ZSlcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICBjdXJyZW50SW5wdXQudmFsdWUtLTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIC8vIFRyaWdnZXIgdGhlIGlucHV0IGV2ZW50IGhlcmUgdG8gYXZvaWQgZXZlbnQgc3BhbVxuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIGV2ZW50LnR5cGUgPT0gJ21vdXNldXAnXG4gICAgICAgICAgICB8fCBldmVudC50eXBlID09ICdtb3VzZWxlYXZlJ1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgJGN1cnJlbnRJbnB1dC50cmlnZ2VyKCdpbnB1dCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgIHZhciAkcGx1c0J1dHRvbiA9ICQoJzxidXR0b24vPicpXG4gICAgICAgIC5hdHRyKCd0eXBlJywgJ2J1dHRvbicpXG4gICAgICAgIC5odG1sKHNldHRpbmdzLmJ1dHRvbkluY3JlbWVudClcbiAgICAgICAgLm9uKCdtb3VzZWRvd24gbW91c2V1cCBtb3VzZWxlYXZlJywgZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICAgIGNoYW5nZUludGVydmFsKGV2ZW50LnR5cGUsIGludGVydmFsLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICBhdHRyTWF4ID09IG51bGxcbiAgICAgICAgICAgICAgfHwgYXR0ck1heCA+IHBhcnNlRmxvYXQoY3VycmVudElucHV0LnZhbHVlKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIGN1cnJlbnRJbnB1dC52YWx1ZSsrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgLy8gVHJpZ2dlciB0aGUgaW5wdXQgZXZlbnQgaGVyZSB0byBhdm9pZCBldmVudCBzcGFtXG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgZXZlbnQudHlwZSA9PSAnbW91c2V1cCdcbiAgICAgICAgICAgIHx8IGV2ZW50LnR5cGUgPT0gJ21vdXNlbGVhdmUnXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICAkY3VycmVudElucHV0LnRyaWdnZXIoJ2lucHV0Jyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgLy8gQXBwZW5kIGVsZW1lbnRzXG4gICAgICBzd2l0Y2ggKHNldHRpbmdzLmJ1dHRvblBvc2l0aW9uKSB7XG4gICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgICRtaW51c0J1dHRvbi5hcHBlbmRUbygkaW5wdXRDb250YWluZXIpO1xuICAgICAgICAgICRwbHVzQnV0dG9uLmFwcGVuZFRvKCRpbnB1dENvbnRhaW5lcik7XG4gICAgICAgICAgJGN1cnJlbnRJbnB1dC5hcHBlbmRUbygkaW5wdXRDb250YWluZXIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyaWdodCc6XG4gICAgICAgICAgJGN1cnJlbnRJbnB1dC5hcHBlbmRUbygkaW5wdXRDb250YWluZXIpO1xuICAgICAgICAgICRtaW51c0J1dHRvbi5hcHBlbmRUbygkaW5wdXRDb250YWluZXIpO1xuICAgICAgICAgICRwbHVzQnV0dG9uLmFwcGVuZFRvKCRpbnB1dENvbnRhaW5lcik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2Fyb3VuZCc6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgJG1pbnVzQnV0dG9uLmFwcGVuZFRvKCRpbnB1dENvbnRhaW5lcik7XG4gICAgICAgICAgJGN1cnJlbnRJbnB1dC5hcHBlbmRUbygkaW5wdXRDb250YWluZXIpO1xuICAgICAgICAgICRwbHVzQnV0dG9uLmFwcGVuZFRvKCRpbnB1dENvbnRhaW5lcik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIC8vIE5pY2VseSBzaXplIGlucHV0XG4gICAgICBpZiAoc2V0dGluZ3MuYXV0b1NpemUpIHtcbiAgICAgICAgJGN1cnJlbnRJbnB1dC53aWR0aChcbiAgICAgICAgICAkY3VycmVudElucHV0LnZhbCgpLmxlbmd0aCtzZXR0aW5ncy5hdXRvU2l6ZUJ1ZmZlcitcImNoXCJcbiAgICAgICAgKTtcbiAgICAgICAgJGN1cnJlbnRJbnB1dC5vbigna2V5dXAgaW5wdXQnLGZ1bmN0aW9uKCl7XG4gICAgICAgICAgJGN1cnJlbnRJbnB1dC5hbmltYXRlKHtcbiAgICAgICAgICAgICd3aWR0aCc6ICRjdXJyZW50SW5wdXQudmFsKCkubGVuZ3RoK3NldHRpbmdzLmF1dG9TaXplQnVmZmVyK1wiY2hcIlxuICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGNoYW5nZUludGVydmFsKGV2ZW50VHlwZSwgaW50ZXJ2YWwsIGNhbGxiYWNrKSB7XG4gICAgaWYgKGV2ZW50VHlwZSA9PSBcIm1vdXNlZG93blwiKSB7XG4gICAgICBpbnRlcnZhbC50aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICBpbnRlcnZhbC5hY3R1YWxJbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICAgIH0sIDIwMCk7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaW50ZXJ2YWwudGltZW91dCkge1xuICAgICAgICBjbGVhclRpbWVvdXQoaW50ZXJ2YWwudGltZW91dCk7XG4gICAgICB9XG4gICAgICBpZiAoaW50ZXJ2YWwuYWN0dWFsSW50ZXJ2YWwpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbC5hY3R1YWxJbnRlcnZhbCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59KGpRdWVyeSkpO1xuIl19
